{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\portfolio\\\\React\\\\et\\\\src\\\\components\\\\AddTransaction.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Context } from '../context/GlobalState';\nimport validator from './Validator';\nimport { v4 as uuid4 } from 'uuid';\nexport const AddTransaction = () => {\n  _s();\n\n  const initState = {\n    text: '',\n    amount: ''\n  };\n  const {\n    dispatch\n  } = React.useContext(Context);\n  const [formData, setFormData] = React.useState(initState);\n  const [err, setError] = React.useState(formData);\n\n  const onchangeHandle = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const data = {\n    // id: Math.floor(Math.random() * 1000 * 100000),\n    id: uuid4(),\n    text: formData.text,\n    amount: +formData.amount,\n    date: new Date()().toLocaleString()\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    setError(validator(formData));\n  };\n\n  useEffect(() => {\n    if (Object.keys(err).length === 0) {\n      setFormData(initState);\n      dispatch({\n        type: 'AddItem',\n        AddTransanction: data\n      });\n    }\n  }, [err]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      id: \"reset\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter text...\",\n          onChange: onchangeHandle,\n          name: \"text\",\n          value: formData.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), err.text && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: [err.text, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: [\"Amount \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 42\n          }, this), \"(negative - expense, positive + income)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Enter amount...\",\n          onChange: onchangeHandle,\n          name: \"amount\",\n          value: formData.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), err.amount && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: [err.amount, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn\",\n        value: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTransaction, \"59q/EikOyJQDkAJQSzFg7/PmSDo=\");\n\n_c = AddTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"sources":["E:/portfolio/React/et/src/components/AddTransaction.jsx"],"names":["React","useEffect","Context","validator","v4","uuid4","AddTransaction","initState","text","amount","dispatch","useContext","formData","setFormData","useState","err","setError","onchangeHandle","e","target","name","value","data","id","date","Date","toLocaleString","onSubmitHandler","preventDefault","Object","keys","length","type","AddTransanction"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Context } from '../context/GlobalState'\r\nimport validator from './Validator';\r\nimport { v4 as uuid4 } from 'uuid'\r\n\r\nexport const AddTransaction = () => {\r\n  const initState = {\r\n    text: '',\r\n    amount: '',\r\n  }\r\n  const { dispatch } = React.useContext(Context)\r\n  const [formData, setFormData] = React.useState(initState);\r\n  const [err, setError] = React.useState(formData)\r\n\r\n  const onchangeHandle = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const data = {\r\n    // id: Math.floor(Math.random() * 1000 * 100000),\r\n    id: uuid4(),\r\n    text: formData.text,\r\n    amount: +formData.amount,\r\n    date: (new Date()()).toLocaleString(),\r\n  }\r\n\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault()\r\n    setError(validator(formData))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(err).length === 0) {\r\n      setFormData(initState);\r\n      dispatch({ type: 'AddItem', AddTransanction: data });\r\n      \r\n      \r\n    }\r\n  }, [err])\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmitHandler} id=\"reset\">\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter text...\"\r\n            onChange={onchangeHandle}\r\n            name=\"text\"\r\n            value={formData.text}\r\n          />\r\n          {err.text && <span className=\"error\">{err.text}  </span>}\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">Amount <br />\r\n            (negative - expense, positive + income)\r\n          </label>\r\n\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter amount...\"\r\n            onChange={onchangeHandle}\r\n            name=\"amount\"\r\n            value={formData.amount}\r\n\r\n          />\r\n          {err.amount && <span className=\"error\">{err.amount}  </span>}\r\n        </div>\r\n        <input type=\"submit\" className=\"btn\" value=\"Add Transaction\" />\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}