{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\portfolio\\\\React\\\\et\\\\src\\\\context\\\\GlobalState.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport Reducer from './Reducer';\nconst TransactionLocalData = JSON.parse(localStorage.getItem('transaction'));\nconst initialState = {\n  transactions: TransactionLocalData ? TransactionLocalData : []\n}; //create context\n\nexport const Context = /*#__PURE__*/createContext(initialState);\nexport const GlobalState = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  useEffect(() => {\n    localStorage.setItem('transaction', JSON.stringify(state.transactions));\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      transactions: state.transactions,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 2\n  }, this);\n};\n\n_s(GlobalState, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = GlobalState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalState\");","map":{"version":3,"sources":["E:/portfolio/React/et/src/context/GlobalState.jsx"],"names":["React","createContext","useReducer","useEffect","Reducer","TransactionLocalData","JSON","parse","localStorage","getItem","initialState","transactions","Context","GlobalState","children","state","dispatch","setItem","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,SAA1C,QAA0D,OAA1D;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAA7B;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,YAAY,EAAGN,oBAAoB,GAAGA,oBAAH,GAA2B;AAD1C,CAArB,C,CAKA;;AACA,OAAO,MAAMO,OAAO,gBAAGX,aAAa,CAACS,YAAD,CAA7B;AAEP,OAAO,MAAMG,WAAW,GAAE,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACE,OAAD,EAAUM,YAAV,CAApC;AAEDP,EAAAA,SAAS,CAAC,MAAK;AACdK,IAAAA,YAAY,CAACS,OAAb,CAAqB,aAArB,EAAoCX,IAAI,CAACY,SAAL,CAAeH,KAAK,CAACJ,YAArB,CAApC;AACA,GAFQ,EAEN,CAACI,KAAD,CAFM,CAAT;AAIA,sBACC,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,YAAY,EAAEI,KAAK,CAACJ,YAAtB;AAAoCK,MAAAA;AAApC,KAAzB;AAAA,cACCF;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKC,CAZM;;GAAMD,W;;KAAAA,W","sourcesContent":["import React,{ createContext, useReducer, useEffect} from 'react';\r\nimport Reducer from './Reducer'\r\n\r\nconst TransactionLocalData = JSON.parse(localStorage.getItem('transaction'))\r\n\r\nconst initialState = {\r\n transactions:  TransactionLocalData ? TransactionLocalData  : []\r\n                     \r\n}\r\n\r\n//create context\r\nexport const Context = createContext(initialState)\r\n\r\nexport const GlobalState =({ children }) =>{\r\n const [state, dispatch] = useReducer(Reducer, initialState);\r\n\r\nuseEffect(() =>{\r\n localStorage.setItem('transaction', JSON.stringify(state.transactions))\r\n}, [state])\r\n\r\nreturn(\r\n <Context.Provider value={{ transactions: state.transactions, dispatch }}>\r\n {children}\r\n</Context.Provider>\r\n)\r\n}"]},"metadata":{},"sourceType":"module"}