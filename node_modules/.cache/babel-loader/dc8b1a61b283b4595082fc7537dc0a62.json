{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\portfolio\\\\React\\\\et\\\\src\\\\components\\\\AddTransaction.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Context } from '../context/GlobalState';\nimport validator from './Validator';\nexport const AddTransaction = () => {\n  _s();\n\n  const initState = {\n    text: '',\n    amount: ''\n  };\n  const {\n    dispatch\n  } = React.useContext(Context);\n  const [text, setText] = React.useState('');\n  const [amount, setAmount] = React.useState('');\n  const [err, setError] = React.useState(initState);\n  const date = new Date().getDay();\n  console.log(date);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    document.getElementById(\"reset\").reset();\n    const data = {\n      id: Math.floor(Math.random() * 1000),\n      text,\n      amount: +amount\n    };\n    setError(validator(text, amount));\n    {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      id: \"reset\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter text...\",\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: [\"Amount \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 37\n          }, this), \"(negative - expense, positive + income)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter amount...\",\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn\",\n        value: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTransaction, \"rVNKM216ZfEasC/Pok/s+ilEM78=\");\n\n_c = AddTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"sources":["E:/portfolio/React/et/src/components/AddTransaction.jsx"],"names":["React","Context","validator","AddTransaction","initState","text","amount","dispatch","useContext","setText","useState","setAmount","err","setError","date","Date","getDay","console","log","onSubmitHandler","e","preventDefault","document","getElementById","reset","data","id","Math","floor","random","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAChC,QAAMC,SAAS,GAAG;AACdC,IAAAA,IAAI,EAAE,EADQ;AAEdC,IAAAA,MAAM,EAAE;AAFM,GAAlB;AAIH,QAAM;AAAEC,IAAAA;AAAF,MAAeP,KAAK,CAACQ,UAAN,CAAiBP,OAAjB,CAArB;AACA,QAAM,CAACI,IAAD,EAAOI,OAAP,IAAkBT,KAAK,CAACU,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACJ,MAAD,EAASK,SAAT,IAAsBX,KAAK,CAACU,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACE,GAAD,EAAMC,QAAN,IAAkBb,KAAK,CAACU,QAAN,CAAeN,SAAf,CAAxB;AAEA,QAAMU,IAAI,GAAG,IAAIC,IAAJ,GAAWC,MAAX,EAAb;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,QAAMK,eAAe,GAAIC,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAjC;AAEA,UAAMC,IAAI,GAAG;AACZC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADQ;AAEZxB,MAAAA,IAFY;AAGZC,MAAAA,MAAM,EAAE,CAACA;AAHG,KAAb;AAKAO,IAAAA,QAAQ,CAACX,SAAS,CAACG,IAAD,EAAOC,MAAP,CAAV,CAAR;AACF,KAAE;AAEA,GAbD;;AAeA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAM,MAAA,QAAQ,EAAEa,eAAhB;AAAiC,MAAA,EAAE,EAAC,OAApC;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACC;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAGC;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,WAAW,EAAC,eAFb;AAGC,UAAA,QAAQ,EAAGC,CAAD,IAAOX,OAAO,CAACW,CAAC,CAACU,MAAF,CAASC,KAAV;AAHzB;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAYC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACC;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA,6CAA+B;AAAA;AAAA;AAAA;AAAA,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAKC;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,WAAW,EAAC,iBAFb;AAGC,UAAA,QAAQ,EAAGX,CAAD,IAAOT,SAAS,CAACS,CAAC,CAACU,MAAF,CAASC,KAAV;AAH3B;AAAA;AAAA;AAAA;AAAA,gBALD;AAAA;AAAA;AAAA;AAAA;AAAA,cAZD,eAuBC;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,KAA/B;AAAqC,QAAA,KAAK,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cAvBD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AA8BA,CA3DM;;GAAM5B,c;;KAAAA,c","sourcesContent":["import React from 'react';\r\nimport { Context } from '../context/GlobalState'\r\nimport validator from './Validator';\r\n\r\nexport const AddTransaction = () => {\r\n    const initState = {\r\n        text: '',\r\n        amount: ''\r\n    }\r\n const { dispatch } = React.useContext(Context)\r\n const [text, setText] = React.useState('');\r\n const [amount, setAmount] = React.useState('');\r\n const [err, setError] = React.useState(initState)\r\n\r\n const date = new Date().getDay();\r\n\r\n console.log(date)\r\n\r\n const onSubmitHandler = (e) => {\r\n  e.preventDefault()\r\n\r\n  document.getElementById(\"reset\").reset();\r\n  \r\n  const data = {\r\n   id: Math.floor(Math.random() * 1000),\r\n   text,\r\n   amount: +amount,\r\n  }\r\n  setError(validator(text, amount))\r\n{}\r\n  \r\n }\r\n \r\n return (\r\n  <>\r\n   <h3>Add new transaction</h3>\r\n   <form onSubmit={onSubmitHandler} id=\"reset\">\r\n    <div className=\"form-control\">\r\n     <label htmlFor=\"text\">Text</label>\r\n\r\n     <input\r\n      type=\"text\"\r\n      placeholder=\"Enter text...\"\r\n      onChange={(e) => setText(e.target.value)}\r\n     \r\n     />\r\n    </div>\r\n\r\n    <div className=\"form-control\">\r\n     <label htmlFor=\"amount\">Amount <br />\r\n     (negative - expense, positive + income)\r\n     </label>\r\n\r\n     <input\r\n      type=\"text\"\r\n      placeholder=\"Enter amount...\"\r\n      onChange={(e) => setAmount(e.target.value)}\r\n     />\r\n    </div>\r\n    <input type=\"submit\" className=\"btn\" value=\"Add Transaction\" />\r\n   </form>\r\n  </>\r\n )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}